{"version":3,"sources":["styles/modules/Header.module.css","styles/modules/cv-form/CVForm.module.css","fonts/space-mono/SpaceMono-Regular.ttf","fonts/space-mono/SpaceMono-Bold.ttf","fonts/muli/Muli.ttf","fonts/muli/Muli-Bold.ttf","components/Header.js","components/cv-form/CVOverview.js","components/cv-form/CVForm.js","components/Main.js","components/Footer.js","App.js","index.js","styles/modules/cv-form/CVOverview.module.css"],"names":["module","exports","Header","title","this","props","className","styles","Component","CVOverview","data","onClickBtn","onClickBtnPrint","contact","summary","experience","education","skills","nbsp","String","fromCharCode","stringMinus3Char","date","substring","length","dateDiv","item","startDate","endDate","accomplishmentsUl","array","map","list","sentence","id","buttonDiv","onClick","edit","container","firstName","lastName","suffix","phoneNumber","email","exp","sectionChildDiv","jobTitle","company","accomplishments","educ","academicDegree","major","schoolName","skillsUl","text","CVForm","setStateV1","section","sectionValue","name","value","newValue","skill","setState","state","setStateV2","e","objIndex","newSectionValue","objectIndex","findIndex","obj","target","parentElement","accomplishment","getSectionValue","checkValidity","valid","validity","tagged","classList","contains","invalid","toggle","handleChange","includes","addMoreSectionValue","newSectionEmptyValue","getAttribute","createSummary","createExperience","createEducation","deleteOneSectionValue","index","splice","handleCheckbox","checked","addToList","concat","addToSkills","skillList","createSkill","setPreviewToFalse","preview","functionWindowPrint","window","print","handleSubmit","formInputs","document","querySelectorAll","invalidInputs","forEach","input","push","focus","uniqid","bind","noValidate","htmlFor","type","onChange","required","pattern","content","form","delete","confirm","num","disabled","trim","hrv2","submit","Main","footer","backgroundColor","padding","textAlign","a","color","Footer","creator","link","style","rel","href","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.88fe1a1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2Cs7p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CVForm\":\"CVForm_CVForm__2WM2K\",\"submit\":\"CVForm_submit__35jKk\",\"hrv2\":\"CVForm_hrv2__lnZcB\",\"list\":\"CVForm_list__116ys\",\"delete\":\"CVForm_delete__2RUZ3\",\"addToList\":\"CVForm_addToList__6N_IM\",\"invalid\":\"CVForm_invalid__3A981\"};","export default __webpack_public_path__ + \"static/media/SpaceMono-Regular.8dc9dfb5.ttf\";","export default __webpack_public_path__ + \"static/media/SpaceMono-Bold.1baea2ed.ttf\";","export default __webpack_public_path__ + \"static/media/Muli.4829cf81.ttf\";","export default __webpack_public_path__ + \"static/media/Muli-Bold.24ed2213.ttf\";","import React, { Component } from 'react';\nimport styles from '../styles/modules/Header.module.css';\n\nclass Header extends Component {\n  render() {\n    const { title } = this.props;\n\n    return (\n      <header className={styles.Header}>\n        <h1>{title}</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport styles from '../../styles/modules/cv-form/CVOverview.module.css';\n\nclass CVOverview extends Component {\n  render() {\n    const { data, onClickBtn, onClickBtnPrint } = this.props;\n    const { \n      contact, summary, experience, education, skills\n    } = data;\n    const nbsp = String.fromCharCode(160);\n\n    const stringMinus3Char = (date) => date.substring(0, date.length-3);\n    const processEndDate = (date) =>\n      (date === 'PRESENT') ? 'present' : stringMinus3Char(date);\n    \n    const dateDiv = (item) => {\n      return (\n        <div className={styles.dateDiv}>\n          <p>\n            {stringMinus3Char(item.startDate)}\n            &nbsp;-&nbsp;\n            {processEndDate(item.endDate)}\n          </p>\n        </div>\n      );\n    };\n\n    const accomplishmentsUl = (array) => {\n      if (array.length > 0) {\n        return (\n          <ul>\n            {array.map((list) => {\n              return (\n                <li key={list.id}>\n                  {list.sentence}\n                </li >\n              );\n            })}\n          </ul>\n        );\n      }\n    }\n\n    return (\n      <div className={styles.CVOverview}>\n        <div className={styles.buttonDiv}>\n          <button \n            onClick={onClickBtn}\n            className={styles.edit}\n          >\n            Edit CV\n          </button>\n          <button \n            onClick={onClickBtnPrint}\n          >\n            Print | Save as PDF\n          </button>\n        </div>\n        <div className={styles.container}>\n          <section className={styles.contact}>\n            <h1>\n              {contact.firstName}&nbsp;\n              {contact.lastName}&nbsp;\n              {(contact.suffix) &&\n                contact.suffix\n              }\n            </h1>\n            <div>\n              <p>\n                <strong>Phone</strong>&nbsp;\n                {contact.phoneNumber}\n              </p>\n              <p>\n                <strong>Email</strong>&nbsp;\n                {contact.email}\n              </p>\n            </div>\n          </section>\n          {(summary.length === 1) &&\n            <section className={styles.summary}>\n              <div>\n                <p>\n                  {summary[0].summary}\n                </p>\n              </div>\n            </section>\n          }\n          {(experience.length > 0) &&\n            <section className={styles.experience}>\n              <h2>Experience</h2>\n              {experience.map((exp) => {\n                return (\n                  <div \n                    className={styles.sectionChildDiv}\n                    key={exp.id}\n                  >\n                    {dateDiv(exp)}\n                    <div>\n                      <p><strong>{exp.jobTitle}</strong></p>\n                      <p><i>{exp.company}</i></p>\n                      {accomplishmentsUl(exp.accomplishments)}\n                    </div>\n                  </div>\n                );\n              })}\n            </section>\n          }\n          {(education.length > 0) &&\n            <section>\n              <h2>Education</h2>\n              {education.map((educ) => {\n                return (\n                  <div \n                    className={styles.sectionChildDiv}\n                    key={educ.id}\n                  >\n                    {dateDiv(educ)}\n                    <div>\n                      <p>\n                        <strong>\n                          {(educ.academicDegree) &&\n                            `${educ.academicDegree},${nbsp}`\n                          }\n                          {(educ.major) &&\n                            `${educ.major},${nbsp}`\n                          }\n                          {educ.schoolName}\n                        </strong>\n                      </p>\n                      {accomplishmentsUl(educ.accomplishments)}\n                    </div>\n                  </div>\n                );\n              })}\n            </section>\n          }\n          {/* remove the bullet of skills section? */}\n          {(skills.length > 0) &&\n            <section>\n              <h2>Skills</h2>\n              <ul className={styles.skillsUl}>\n                {skills.map((list) => {\n                  return (\n                    <li key={list.id}>\n                      {list.text}\n                    </li >\n                  );\n                })}\n              </ul>\n            </section>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CVOverview;\n","import React, { Component } from 'react';\nimport uniqid from \"uniqid\";\nimport styles from '../../styles/modules/cv-form/CVForm.module.css';\nimport CVOverview from './CVOverview';\n\nclass CVForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createSummary = () => {\n      return {\n        id: uniqid(),\n        summary: '',\n      };\n    };\n\n    this.accomplishment = () => {\n      return {\n        id: uniqid(),\n        sentence: '',\n      };\n    };\n\n    this.createExperience = () => {\n      return {\n        id: uniqid(),\n        jobTitle: '',\n        company: '',\n        accomplishment: this.accomplishment(),\n        accomplishments: [],\n        startDate: '',\n        endDate: '',\n      };\n    };\n\n    this.createEducation = () => {\n      return {\n        id: uniqid(),\n        academicDegree: '',\n        major: '',\n        schoolName: '',\n        accomplishment: this.accomplishment(),\n        accomplishments: [],\n        startDate: '',\n        endDate: '',\n      };\n    };\n\n    this.createSkill = () => {\n      return {\n        skill: {\n          id: uniqid(),\n          text: '',\n        },\n        skillList: [],\n      };\n    };\n\n    this.state = {\n      data: {},\n      preview: false,\n      contact: {\n        firstName: '',\n        lastName: '',\n        suffix: '',\n        email: '',\n        phoneNumber: '',\n      },\n      summary: [this.createSummary()],\n      experience: [this.createExperience()],\n      education: [this.createEducation()],\n      skills: this.createSkill(),\n    };\n\n    this.setPreviewToFalse = this.setPreviewToFalse.bind(this);\n    this.functionWindowPrint = this.functionWindowPrint.bind(this);\n  }\n\n  setStateV1 = (section, sectionValue, name, value) => {\n    // setState for object {} type section. e.g. contact\n    let newValue = value;\n    if (section === 'skills') {\n      newValue = {\n        ...sectionValue.skill,\n        text: value,\n      };\n    }\n    this.setState({\n      ...this.state,\n      [section]: {\n        ...sectionValue,\n        [name]: newValue,\n      },\n    });\n  }\n\n  setStateV2 = (section, sectionValue, name, value, e, objIndex) => {\n    // setState for array type section. e.g. summary, experience\n    const newSectionValue = [ ...sectionValue ];\n    let newValue = value;\n    let objectIndex = objIndex;\n\n    if (objectIndex == null) {\n      const targetObject = (obj) => obj.id === e.target.parentElement.id; \n      objectIndex = sectionValue.findIndex(targetObject);\n    }\n\n    if (name === 'accomplishment') {\n      newValue = {\n        ...newSectionValue[objectIndex].accomplishment,\n        sentence: value,\n      };\n    }\n\n    newSectionValue[objectIndex] = {\n      ...newSectionValue[objectIndex],\n      [name]: newValue,\n    };\n\n    this.setState({\n      ...this.state,\n      [section]: [\n        ...newSectionValue,\n      ],\n    });\n  }\n\n  getSectionValue = (section) => {\n    let sectionValue;\n    \n    if (section === 'contact') {\n      sectionValue = this.state.contact;\n    } else if (section === 'summary') {\n      sectionValue = this.state.summary;\n    } else if (section === 'experience') {\n      sectionValue = this.state.experience;\n    } else if (section === 'education') {\n      sectionValue = this.state.education;\n    } else if (section === 'skills') {\n      sectionValue = this.state.skills;\n    }\n    return sectionValue;\n  }\n\n  checkValidity = (target) => {\n    const valid = target.validity.valid;\n    const tagged = target.classList.contains(styles.invalid);\n    if (valid && tagged) {\n      target.classList.toggle(styles.invalid);\n    } else if (!valid && !tagged) {\n      target.classList.toggle(styles.invalid);\n    }\n  }\n\n  handleChange = (e) => {\n    this.checkValidity(e.target);\n    const arrayTypeSections = [\n      'summary', 'experience', 'education',\n    ];\n    const section = e.target.parentElement.parentElement.id;\n    const name = e.target.name;\n    let value = e.target.value;\n\n    if ((section === 'contact') || section === 'skills') {\n      this.setStateV1(\n        section, this.getSectionValue(section), name, value\n      );\n    } else if (arrayTypeSections.includes(section)) {\n      this.setStateV2(\n        section, this.getSectionValue(section), name, value, e\n      );\n    }\n  }\n\n  addMoreSectionValue = (e) => {\n    const section = e.target.getAttribute('data-section');\n    const sectionValue = this.getSectionValue(section);\n    let newSectionEmptyValue;\n\n    if (section === 'summary') {\n      newSectionEmptyValue = this.createSummary();\n    } else if (section === 'experience') {\n      newSectionEmptyValue = this.createExperience();\n    } else if (section === 'education') {\n      newSectionEmptyValue = this.createEducation();\n    }\n\n    this.setState({\n      ...this.state,\n      [section]: [\n        ...sectionValue,\n        newSectionEmptyValue,\n      ]\n    });\n  }\n\n  deleteOneSectionValue = (e) => {\n    const section = e.target.getAttribute('data-section');\n    const sectionValue = this.getSectionValue(section);\n    const index = e.target.getAttribute('data-index');\n\n    sectionValue.splice(index, 1);\n    this.setState({\n      ...this.state,\n      [section]: [\n        ...sectionValue,\n      ],\n    });\n  }\n\n  handleCheckbox = (section, sectionValue, name, value, e, index) => {\n    if (e.target.checked) {\n      this.setStateV2(section, sectionValue, name, value, e, index);\n    } else {\n      this.setStateV2(section, sectionValue, name, '', e, index);\n    }\n  }\n\n  addToList = (e) => {\n    const index = e.target.getAttribute('data-index');\n    const section = e.target.getAttribute('data-section');\n    const sectionValue = this.getSectionValue(section);\n\n    sectionValue[index].accomplishments = \n      sectionValue[index].accomplishments\n        .concat(sectionValue[index].accomplishment);\n\n    sectionValue[index].accomplishment = {\n      ...this.accomplishment(),\n    };\n    \n    this.setState({\n      ...this.state,\n      [section]: [\n        ...sectionValue,\n      ],\n    });\n  }\n\n  addToSkills = () => {\n    this.setState({\n      ...this.state,\n      skills: {\n        skillList: this.state.skills.skillList\n          .concat(this.state.skills.skill),\n        skill: this.createSkill().skill,\n      },\n    });\n  }\n\n  setPreviewToFalse = () => {\n    this.setState({\n      ...this.state,\n      preview: false,\n    });\n  }\n\n  functionWindowPrint = () => {\n    window.print();\n  }\n\n  handleSubmit = () => {\n    const formInputs = document.querySelectorAll('#cvM4kerForm input');\n    let invalid = 0;\n    let invalidInputs = [];\n\n    formInputs.forEach((input) => {\n      this.checkValidity(input);\n      if (!input.validity.valid){\n        invalid += 1;\n        invalidInputs.push(input);\n      }\n    });\n\n    if (invalid === 0) {\n      this.setState({\n        ...this.state,\n        data: {\n          contact: this.state.contact,\n          summary: this.state.summary,\n          experience: this.state.experience,\n          education: this.state.education,\n          skills: this.state.skills.skillList,\n        },\n        preview: true,\n      });\n    } else {\n      invalidInputs[0].focus();\n    }\n  }\n\n  render() {\n    const { \n      summary, contact,experience, education, skills, preview, data,\n    } = this.state;\n\n    return (\n      <div>\n        {preview === false &&\n          <form \n            className={styles.CVForm}\n            id='cvM4kerForm'\n            noValidate\n          >\n            <section id='contact'>\n              <h2>Contact Information</h2>\n              <hr />\n              <div>\n                <label htmlFor='firstName'>First name</label>\n                <input \n                  type='text' \n                  name='firstName'\n                  id='firstName' \n                  value={contact.firstName}\n                  onChange={this.handleChange}\n                  required\n                />\n                <label htmlFor='lastName'>Last name</label>\n                <input \n                  type='text' \n                  name='lastName'\n                  id='lastName' \n                  value={contact.lastName}\n                  onChange={this.handleChange}\n                  required\n                />\n                <label htmlFor='suffix'>Suffix</label>\n                <input \n                  type='text' \n                  name='suffix'\n                  id='suffix' \n                  value={contact.suffix}\n                  onChange={this.handleChange}\n                />\n                <label htmlFor='email'>Email</label>\n                <input \n                  type='email' \n                  name='email'\n                  id='email'\n                  value={contact.email}\n                  onChange={this.handleChange}\n                  required\n                />\n                <label htmlFor='phoneNumber'>Phone number</label>\n                <input \n                  type='tel' \n                  name='phoneNumber'\n                  id='phoneNumber'\n                  pattern='[0-9]{4}-[0-9]{3}-[0-9]{4}'\n                  value={contact.phoneNumber}\n                  onChange={this.handleChange}\n                  required\n                />\n                <small>Format: 9999-999-9999</small>\n              </div>\n            </section>\n            <section id='summary'>\n              <h2>Summary</h2>\n              <hr />\n              {summary.map((content, index) => {\n                return (\n                  <div key={content.id} id={content.id}>\n                    <textarea \n                      form='cvM4kerForm'\n                      name='summary'\n                      value={content.summary}\n                      onChange={this.handleChange}\n                    ></textarea>\n                    <button\n                      type='button'\n                      className={styles.delete}\n                      data-index={index}\n                      data-section='summary'\n                      onClick={\n                        (e) => {\n                          if (content.summary.length > 60) {\n                            if (window.confirm('Continue to remove summary?') \n                              === true) {\n                              this.deleteOneSectionValue(e);\n                            }\n                          } else {\n                            this.deleteOneSectionValue(e);\n                          }\n                        }\n                      }\n                    >Remove Summary</button>\n                  </div>\n                );\n              })}\n              {summary.length === 0 &&\n                <button\n                  type='button'\n                  data-section='summary'\n                  onClick={this.addMoreSectionValue}\n                >Add Summary</button>\n              }\n            </section>\n            <section id='experience'>\n              <h2>Experience</h2>\n              <hr />\n              {experience.map((exp, index) => {\n                const num = index + 1;\n                return (\n                  <div \n                    key={exp.id} \n                    id={exp.id}\n                  >\n                    {experience.length > 1 &&\n                      <span>{`#${num}`}</span>\n                    }\n                    <label htmlFor={`jobTitle${num}`}>Job Title</label>\n                    <input \n                      type='text' \n                      name='jobTitle'\n                      id={`jobTitle${num}`}\n                      value={exp.jobTitle}\n                      onChange={this.handleChange}\n                      required\n                    />\n                    <label htmlFor={`company${num}`}>Company</label>\n                    <input \n                      type='text' \n                      name='company'\n                      id={`company${num}`}\n                      value={exp.company}\n                      onChange={this.handleChange}\n                      required\n                    />\n                    <label htmlFor={`expStartDAte${num}`}>Start Date</label>\n                    <input\n                      type='date' \n                      name='startDate'\n                      id={`expStartDAte${num}`}\n                      value={exp.startDate}\n                      onChange={this.handleChange}\n                      required\n                    />\n                    <label htmlFor={`expEndDAte${num}`}>End Date</label>\n                    {exp.endDate !== 'PRESENT' &&\n                      <input\n                        type='date' \n                        name='endDate'\n                        id={`expEndDAte${num}`}\n                        value={exp.endDate}\n                        onChange={this.handleChange}\n                        required\n                      />\n                    }\n                    <small>\n                      <input \n                        type='checkbox' \n                        id={`expCheckboxEndDAte${num}`}\n                        checked={exp.endDate === 'PRESENT'\n                          ? true\n                          : false\n                        }\n                        onChange={(e) => \n                          this.handleCheckbox(\n                            'experience',\n                            this.state.experience,\n                            'endDate',\n                            'PRESENT',\n                            e,\n                            index,\n                          )\n                        }\n                      />\n                      <label htmlFor={`expCheckboxEndDAte${num}`}>\n                        PRESENT\n                      </label>\n                    </small>\n                    <label htmlFor={`expAccomplishment${num}`}>\n                      Accomplishment\n                    </label>\n                    <input\n                      type='text'\n                      name='accomplishment'\n                      id={`expAccomplishment${num}`}\n                      value={exp.accomplishment.sentence}\n                      onChange={this.handleChange}\n                    />\n                    <button\n                      type='button'\n                      className={styles.addToList}\n                      data-index={index}\n                      data-section='experience'\n                      disabled={exp.accomplishment.sentence\n                        .trim().length > 0\n                        ? false\n                        : true\n                      }\n                      onClick={this.addToList}\n                    >\n                      Add To List\n                    </button>\n                    <details>\n                      <summary>List of Accomplishments</summary>\n                      {exp.accomplishments.length  > 0\n                        ?\n                          <div \n                            className={styles.list}\n                            id={`expList${num}`}\n                          >\n                            <ul>\n                              {exp.accomplishments.map((item) => {\n                                return (\n                                  <li key={item.id}>{item.sentence}</li>\n                                );\n                              })}\n                            </ul>\n                          </div>\n                        : <div>(empty)</div>\n                      }\n                    </details>\n                    <button\n                      type='button'\n                      className={styles.delete}\n                      data-index={index}\n                      data-section='experience'\n                      onClick={this.deleteOneSectionValue}\n                    >\n                      {experience.length === 1\n                        ? 'Remove Experience'\n                        : `Delete #${num}`\n                      }\n                    </button>\n                    {experience.length > 1 &&\n                      <hr className={styles.hrv2}/>\n                    }\n                  </div>\n                );\n              })}\n              <button \n                type='button'\n                data-section='experience'\n                onClick={this.addMoreSectionValue}\n              >\n                {experience.length === 0\n                  ? 'Add Experience'\n                  : 'Add More'\n                }\n              </button>\n            </section>\n            <section id='education'>\n              <h2>Education</h2>\n              <hr />\n              {education.map((educ, index) => {\n                const num = index + 1;\n                return (\n                  <div \n                    key={educ.id} \n                    id={educ.id}\n                  >\n                    {education.length > 1 &&\n                      <span>{`#${num}`}</span>\n                    }\n                    <label htmlFor={`academicDegree${num}`}>\n                      Academic Degree\n                    </label>\n                    <input \n                      type='text' \n                      name='academicDegree'\n                      id={`academicDegree${num}`}\n                      value={educ.academicDegree}\n                      onChange={this.handleChange}\n                    />\n                    <label htmlFor={`major${num}`}>Major</label>\n                    <input \n                      type='text' \n                      name='major'\n                      id={`major${num}`}\n                      value={educ.major}\n                      onChange={this.handleChange}\n                    />\n                    <label htmlFor={`schoolName${num}`}>\n                      School Name\n                    </label>\n                    <input \n                      type='text' \n                      name='schoolName'\n                      id={`schoolName${num}`}\n                      value={educ.schoolName}\n                      onChange={this.handleChange}\n                      required\n                    />\n                    <label htmlFor={`educStartDate${num}`}>\n                      Start Date\n                    </label>\n                    <input\n                      type='date' \n                      name='startDate'\n                      id={`educStartDate${num}`}\n                      value={educ.startDate}\n                      onChange={this.handleChange}\n                      required\n                    />\n                    <label htmlFor={`educEndDAte${num}`}>\n                      End Date\n                    </label>\n                    {educ.endDate !== 'PRESENT' &&\n                      <input\n                        type='date' \n                        name='endDate'\n                        id={`educEndDAte${num}`}\n                        value={educ.endDate}\n                        onChange={this.handleChange}\n                        required\n                      />\n                    }\n                    <small>\n                      <input \n                        type='checkbox' \n                        id={`educCheckboxEndDAte${num}`}\n                        checked={educ.endDate === 'PRESENT'\n                          ? true\n                          : false\n                        }\n                        onChange={(e) => \n                          this.handleCheckbox(\n                            'education',\n                            this.state.education,\n                            'endDate',\n                            'PRESENT',\n                            e,\n                            index,\n                          )\n                        }\n                      />\n                      <label htmlFor={`educCheckboxEndDAte${num}`}>\n                        PRESENT\n                      </label>\n                    </small>\n                    <label htmlFor={`educAccomplishment${num}`}>\n                      Accomplishment\n                    </label>\n                    <input\n                      type='text'\n                      name='accomplishment'\n                      id={`educAccomplishment${num}`}\n                      value={educ.accomplishment.sentence}\n                      onChange={this.handleChange}\n                    />\n                    <button\n                      type='button'\n                      className={styles.addToList}\n                      data-index={index}\n                      data-section='education'\n                      disabled={educ.accomplishment.sentence\n                        .trim().length > 0\n                        ? false\n                        : true\n                      }\n                      onClick={this.addToList}\n                    >\n                      Add To List\n                    </button>\n                    <details>\n                      <summary>List of Accomplishments</summary>\n                      {educ.accomplishments.length  > 0\n                        ?\n                          <div \n                            className={styles.list}\n                            id={`educList${num}`}\n                          >\n                            <ul>\n                              {educ.accomplishments.map((item) => {\n                                return (\n                                  <li key={item.id}>{item.sentence}</li>\n                                );\n                              })}\n                            </ul>\n                          </div>\n                        : <div>(empty)</div>\n                      }\n                    </details>\n                    <button\n                      type='button'\n                      className={styles.delete}\n                      data-index={index}\n                      data-section='education'\n                      onClick={this.deleteOneSectionValue}\n                    >\n                      {education.length === 1\n                        ? 'Remove Education'\n                        : `Delete #${num}`\n                      }\n                    </button>\n                    {education.length > 1 &&\n                      <hr className={styles.hrv2}/>\n                    }\n                  </div>\n                );\n              })}\n              <button \n                type='button'\n                data-section='education'\n                onClick={this.addMoreSectionValue}\n              >\n                {education.length === 0\n                  ? 'Add Education'\n                  : 'Add More'\n                }\n              </button>\n            </section>\n            <section id='skills'>\n              <h2>Skills</h2>\n              <hr />\n              <div>\n                <label htmlFor='skill'>Skill</label>\n                <input \n                  type='text' \n                  name='skill'\n                  id='skill' \n                  value={skills.skill.text}\n                  onChange={this.handleChange}\n                />\n                <button\n                  type='button'\n                  className={styles.addToList}\n                  disabled={skills.skill.text.trim().length > 0\n                    ? false\n                    : true\n                  }\n                  onClick={this.addToSkills}\n                >\n                  Add Skill\n                </button>\n                <details>\n                  <summary>List of Skills</summary>\n                  {skills.skillList.length > 0\n                    ?\n                      <div \n                        className={styles.list}\n                        id={`skillList`}\n                      >\n                        <ul>\n                          {skills.skillList.map((item) => {\n                            return (\n                              <li key={item.id}>{item.text}</li>\n                            );\n                          })}\n                        </ul>\n                      </div>\n                    : <div>(empty)</div>\n                  }\n                </details>\n              </div>\n            </section>\n            <button\n              type='button'\n              className={styles.submit}\n              onClick={this.handleSubmit}\n            >\n              Create CV\n            </button>\n          </form>\n        }\n        {preview === true &&\n          <CVOverview \n            data={data}\n            onClickBtn={this.setPreviewToFalse}\n            onClickBtnPrint={this.functionWindowPrint}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default CVForm;\n","import React, { Component } from 'react';\nimport CVForm from './cv-form/CVForm';\n\nclass Main extends Component {\n\n  render() {\n    return (\n      <div className='Main'>\n        <CVForm />\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\n\nconst styles = {\n  footer: {\n    backgroundColor: 'var(--ufoGreen)',\n    padding: '1rem 1.5rem 1.75rem 1.5rem',\n    textAlign: 'right',\n  },\n  a: {\n    color: 'var(--onyx)',\n  },\n};\n\nclass Footer extends Component {\n  render() {\n    const { creator, link } = this.props;\n\n    return (\n      <footer style={styles.footer}>\n        <p>\n          Created by:&nbsp;\n          <a \n            style={styles.a}\n            target='_blank'\n            rel='noopener noreferrer'\n            href={link}\n          >\n            {creator}\n          </a>\n        </p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport './styles/App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Header title='CV M4ker'/>\n        <Main />\n        <Footer \n          creator='L4ck'\n          link='https://github.com/mrjgamboa'\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './fonts/space-mono/SpaceMono-Regular.ttf';\nimport './fonts/space-mono/SpaceMono-Bold.ttf';\nimport './fonts/muli/Muli.ttf';\nimport './fonts/muli/Muli-Bold.ttf';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CVOverview\":\"CVOverview_CVOverview__1kucg\",\"container\":\"CVOverview_container__2r-oM\",\"dateDiv\":\"CVOverview_dateDiv__YgIj4\",\"sectionChildDiv\":\"CVOverview_sectionChildDiv__1gy8J\",\"skillsUl\":\"CVOverview_skillsUl__2NO1u\",\"buttonDiv\":\"CVOverview_buttonDiv__1b5jg\"};"],"sourceRoot":""}